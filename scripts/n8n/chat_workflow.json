{
  "name": "My workflow 4",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        288,
        -32
      ],
      "id": "79f6ef8e-3143-4f62-a463-470b794bb925",
      "name": "When chat message received",
      "webhookId": "4c1d53eb-08bb-447b-b857-8635764a517f"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        368,
        256
      ],
      "id": "fc1b0164-12cd-4064-bc98-994ac7735804",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sBtqsHWcpktkUaWf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a deterministic planner that converts the user’s message into a single JSON object that strictly follows the schema below. You must be consistent and predictable.\n\n* **Output policy:** You MUST produce only one JSON object and NOTHING ELSE, using the provided `format_final_json_response` tool. Do not format JSON manually. Use the tool exactly once when ready.\n\n* **Schema contract (you MUST adhere to it):**\n  Fields include: `intent`, `topK`, `keywords`, `phrase`, `semantic`, `mode` (\"hybrid\" | \"lexical\"), `filters.site`, `filters.lang`, `filters.author`, `filters.date_from`, `filters.date_to`, `sort.by` (\"published\\_at\" | \"indexed\\_at\"), `sort.order` (\"asc\" | \"desc\"), `return.index` (\"articles\" | \"chunks\"), `return.fields`, `need_summary`.\n  Allowed `lang`: \\[\"ca\",\"es\",\"en\",\"fr\"].\n\n* **Defaults & invariants:**\n\n  * If no explicit instruction: `topK = 5`.\n  * If user mentions recency (“avui/ahir/aquesta setmana/aquest mes/últimes/darreres”), set `sort = {\"by\":\"published_at\",\"order\":\"desc\"}` (fallback to `indexed_at` if missing).\n  * Never output languages or sites outside the allowed lists.\n  * Normalize dates to `YYYY-MM-DD` using timezone **Europe/Madrid** for relative dates (today/yesterday/last week/last weekend/this month, etc.). Convert them to absolute ISO in the plan using current date from DateTime Tool as a reference.\n  * Ensure coherence: `\"mode\":\"hybrid\" ⇒ \"semantic\": true`; `\"mode\":\"lexical\" ⇒ \"semantic\": false`.\n\n* **Intent selection (CRITICAL):**\n\n  1. **Latest listings** (user asks “últimes/darreres/avui/ahir / per site”):\n\n     * `intent: \"latest_by_site\"`\n     * `return.index: \"articles\"`\n     * `sort.by: \"published_at\"`\n     * If the user says “de cada site”, **do not pre-filter by site**; if they name a site (e.g., “salesians”), set `filters.site` accordingly.\n     * `topK` means “how many per site”.\n  2. **Article lists (default)** (the user quiere titulares/enlaces o no pide “fragments”):\n\n     * `intent: \"search_articles\"`\n     * If user provides **quoted phrase** → `phrase` (unquoted), `mode:\"lexical\"`, `semantic:false`.\n     * Else, when only keywords and they do NOT ask for fragments → `mode:\"hybrid\"`, `semantic:true`.\n     * `return.index:\"articles\"`.\n  3. **Fragment search** (user asks “fragments/extractes/on es digui…”):\n\n     * `intent: \"search_chunks\"`\n     * If **quoted phrase** → `mode:\"lexical\"`, `semantic:false`, use `phrase`.\n     * Else → `mode:\"hybrid\"`, `semantic:true`, use `keywords`.\n     * `return.index:\"chunks\"`.\n  4. **Summaries** (user asks for “resum/resum curt/resum amb enllaços”):\n\n     * Set `need_summary:true`.\n     * Pair it with the relevant intent above (`latest_by_site` hoy/ahir, `search_articles`, o `search_chunks` si pidió fragments).\n\n* **Quoted phrase handling:**\n\n  * Extract any quoted span into `phrase` (strip quotes).\n  * **Do NOT force hybrid for quoted phrase**. Use:\n\n    * `search_articles` + `mode:\"lexical\"` for article lists (the usual case).\n    * `search_chunks` + `mode:\"lexical\"` only if they explicitly want fragments.\n\n* **Semantic vs lexical:**\n\n  * Prefer **lexical** for exact phrase or purely recency-driven “latest”.\n  * Prefer **hybrid/semantic** only when there’s no exact phrase and the goal is topical recall.\n\n* **Filters:**\n\n  * Populate `filters.site/lang/author/date_*` only if the user mentions them.\n  * Do **not** invent defaults (e.g., no pongas `lang:[\"ca\"]` por defecto sólo porque el usuario escribe en catalán).\n  * Convert relative dates to absolute using Europe/Madrid (e.g., “ahir” → Convert them to absolute ISO in the plan using current date from DateTime Tool as a reference.\n\n* **Return fields guidance:**\n\n  * For **articles** (most journalist tasks):\n    `[\"title\",\"url\",\"published_at\",\"site\",\"author\",\"description\"]`\n  * For **chunks** (only when they asked fragments):\n    `[\"url\",\"content\",\"chunk_ix\",\"published_at\",\"site\",\"lang\",\"author\"]`\n\n* **Validation & normalization:**\n\n  * If any required field is missing, fill with safe defaults per the rules above.\n  * Trim surrounding quotes from `phrase`.\n  * Never contradict these rules."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        560,
        -32
      ],
      "id": "422f86a2-a9cc-4242-8b29-7a24ee373d67",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://persualia.com/schemas/opensearch-chat.plan.v2.json\",\n  \"title\": \"OpenSearch Chat Plan (v2)\",\n  \"type\": \"object\",\n  \"additionalProperties\": false,\n  \"required\": [\"intent\"],\n  \"properties\": {\n    \"intent\": {\n      \"type\": \"string\",\n      \"enum\": [\"search_articles\", \"search_chunks\", \"latest_by_site\", \"summarize\"],\n      \"description\": \"Tipo de acción a realizar.\"\n    },\n    \"topK\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50, \"default\": 5 },\n    \"keywords\": { \"type\": \"string\", \"minLength\": 1, \"description\": \"Consulta léxica (sin comillas).\" },\n    \"phrase\": { \"type\": \"string\", \"minLength\": 1, \"description\": \"Frase exacta cuando el usuario usa comillas.\" },\n    \"semantic\": { \"type\": \"boolean\", \"default\": false, \"description\": \"Activa búsqueda vectorial (semántica).\" },\n    \"mode\": {\n      \"type\": \"string\",\n      \"enum\": [\"hybrid\", \"lexical\"],\n      \"description\": \"Convenience flag: 'hybrid' implica semantic=true; 'lexical' implica semantic=false.\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"site\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\", \"enum\": [\"salesians\", \"jesuites\", \"maristes\"] },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"lang\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\", \"enum\": [\"ca\", \"es\", \"en\", \"fr\"] },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"author\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\", \"minLength\": 1 },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"date_from\": { \"type\": \"string\", \"format\": \"date\" },\n        \"date_to\": { \"type\": \"string\", \"format\": \"date\" }\n      }\n    },\n    \"sort\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"by\": { \"type\": \"string\", \"enum\": [\"published_at\", \"indexed_at\"] },\n        \"order\": { \"type\": \"string\", \"enum\": [\"asc\", \"desc\"], \"default\": \"desc\" }\n      }\n    },\n    \"return\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"index\"],\n      \"properties\": {\n        \"index\": { \"type\": \"string\", \"enum\": [\"articles\", \"chunks\"] },\n        \"fields\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"uniqueItems\": true,\n          \"items\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"title\", \"url\", \"author\", \"published_at\", \"indexed_at\",\n              \"site\", \"base_url\", \"lang\", \"description\", \"content\",\n              \"chunk_ix\"\n            ]\n          }\n        }\n      }\n    },\n    \"need_summary\": { \"type\": \"boolean\", \"default\": false }\n  },\n  \"allOf\": [\n    {\n      \"if\": { \"properties\": { \"mode\": { \"const\": \"hybrid\" } }, \"required\": [\"mode\"] },\n      \"then\": { \"properties\": { \"semantic\": { \"const\": true } } }\n    },\n    {\n      \"if\": { \"properties\": { \"mode\": { \"const\": \"lexical\" } }, \"required\": [\"mode\"] },\n      \"then\": { \"properties\": { \"semantic\": { \"const\": false } } }\n    },\n    {\n      \"if\": { \"properties\": { \"return\": { \"properties\": { \"index\": { \"const\": \"articles\" } }, \"required\": [\"index\"] } } },\n      \"then\": {\n        \"properties\": {\n          \"return\": {\n            \"properties\": {\n              \"fields\": {\n                \"items\": {\n                  \"enum\": [\n                    \"title\", \"url\", \"author\", \"published_at\", \"indexed_at\",\n                    \"site\", \"base_url\", \"lang\", \"description\", \"content\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    {\n      \"if\": { \"properties\": { \"return\": { \"properties\": { \"index\": { \"const\": \"chunks\" } }, \"required\": [\"index\"] } } },\n      \"then\": {\n        \"properties\": {\n          \"return\": {\n            \"properties\": {\n              \"fields\": {\n                \"items\": {\n                  \"enum\": [\n                    \"url\", \"author\", \"published_at\", \"indexed_at\",\n                    \"site\", \"base_url\", \"lang\", \"content\", \"chunk_ix\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    {\n      \"description\": \"Si hay frase exacta, al menos una de 'phrase' o 'keywords' debe existir (ya garantizado por la presencia de 'phrase'). Además, recomienda 'lexical' o 'hybrid' explícito.\",\n      \"if\": { \"required\": [\"phrase\"] },\n      \"then\": {\n        \"anyOf\": [\n          { \"properties\": { \"mode\": { \"const\": \"lexical\" } } },\n          { \"properties\": { \"mode\": { \"const\": \"hybrid\" } } }\n        ]\n      }\n    }\n  ],\n  \"examples\": [\n    {\n      \"intent\": \"search_chunks\",\n      \"topK\": 3,\n      \"keywords\": \"joves refugiats\",\n      \"semantic\": true,\n      \"mode\": \"hybrid\",\n      \"filters\": { \"site\": [\"salesians\"], \"lang\": [\"ca\"] },\n      \"sort\": { \"by\": \"published_at\", \"order\": \"desc\" },\n      \"return\": { \"index\": \"chunks\", \"fields\": [\"url\",\"content\",\"published_at\",\"site\",\"author\",\"chunk_ix\"] },\n      \"need_summary\": false\n    },\n    {\n      \"intent\": \"search_articles\",\n      \"topK\": 5,\n      \"phrase\": \"«vocació salesiana»\",\n      \"semantic\": false,\n      \"mode\": \"lexical\",\n      \"filters\": { \"site\": [\"jesuites\"], \"lang\": [\"ca\",\"es\"] },\n      \"sort\": { \"by\": \"published_at\", \"order\": \"desc\" },\n      \"return\": { \"index\": \"articles\", \"fields\": [\"title\",\"url\",\"author\",\"published_at\",\"description\"] },\n      \"need_summary\": true\n    }\n  ]\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        720,
        240
      ],
      "id": "1694d8c7-b5b7-492b-9c04-9cb503bb38c8",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        720,
        480
      ],
      "id": "b57c48d8-5c2e-4dea-8451-910d49ec978f",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "sBtqsHWcpktkUaWf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "Ets un assistent que pot fer cerques avançades en un conjunt d'articles de notícies. La teva tasca és donar resposta a les preguntes del usuari.\n\n  * **Tools:** You have access to the following tools:\n    1. `search`: |\n      Utilitza aquesta eina per realitzar cerques d'articles a la base de dades.\n      Requereix un únic argument que és un objecte JSON que segueix estrictament l'esquema definit en el `INTENT_PROMPT`\n\n  Contestes en l'idioma del usuari (català, castellà, anglès o francès).\n  \n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1392,
        -32
      ],
      "id": "fe9753fb-2286-4024-96f2-758dca663d5d",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "description": "Call this tool to search into articles database",
        "workflowId": {
          "__rl": true,
          "value": "BynuIddOj2SVWxcY",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1616,
        224
      ],
      "id": "112d3357-63e4-4f3f-8a28-9784b2dff8f5",
      "name": "Call 'My Sub-Workflow 1'"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1328,
        240
      ],
      "id": "ac243467-1e39-45fb-bb9d-c629b09f66f3",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "sBtqsHWcpktkUaWf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        560,
        304
      ],
      "id": "7bd19d9a-b29e-49c6-85b8-af2cc457dc7f",
      "name": "Date & Time"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'My Sub-Workflow 1'": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0f09d1da-cc24-4848-a037-1e6480fde89c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d9644988dffef6f6cab575748aeca294d9a27931b98dc5bb58f2a58200eb664c"
  },
  "id": "Qwc1YZAJFDomFtAn",
  "tags": []
}